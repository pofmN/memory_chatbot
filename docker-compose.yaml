services:
  postgres:
    image: ankane/pgvector
    container_name: chatbot_postgres
    environment:
      POSTGRES_DB: chatbot_db
      POSTGRES_USER: chatbot_user
      POSTGRES_PASSWORD: chatbot_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatbot_user -d chatbot_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - chatbot_network 

  fcm-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chatbot_fcm_service
    command: python start_fcm_service.py
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=chatbot_db
      - DB_USER=chatbot_user
      - DB_PASSWORD=chatbot_password
      - FCM_SERVICE_PORT=8001
      - FIREBASE_CREDENTIALS_PATH=/app/firebase_key.json
      # Add Firebase environment variables
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - FIREBASE_AUTH_DOMAIN=${FIREBASE_AUTH_DOMAIN}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID}
      - FIREBASE_APP_ID=${FIREBASE_APP_ID}
      - FIREBASE_VAPID_KEY=${FIREBASE_VAPID_KEY}
    volumes:
      - ./firebase_key.json:/app/firebase_key.json:ro
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      start_period: 60s
    networks:
      - chatbot_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: chatbot_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@chatbot.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - chatbot_network

  chatbot-app:
    build: .
    container_name: chatbot_app
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=chatbot_db
      - DB_USER=chatbot_user
      - DB_PASSWORD=chatbot_password
      - FCM_SERVICE_URL=http://fcm-service:8001
      - FIREBASE_CREDENTIALS_PATH=/app/firebase_key.json
      - MCP_SERVER_PATH=/app/mcp/server.py
      # Add these API keys:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY}
      - LANGSMITH_TRACING=${LANGSMITH_TRACING}
      - LANGSMITH_PROJECT=${LANGSMITH_PROJECT}
    ports:
      - "8501:8501"
    volumes:
      - .:/app
      - /app/venv
      - /app/__pycache__
      - ./database/init.sql:/app/database/init.sql
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - chatbot_network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  chatbot_network:
    driver: bridge